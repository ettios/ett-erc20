/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EttiosToken, EttiosTokenInterface } from "../EttiosToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initMint",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff191660121790553480156200001e57600080fd5b5060405162000f7d38038062000f7d83398101604081905262000041916200031b565b8351849084906200005a906003906020850190620001a8565b50805162000070906004906020840190620001a8565b50506005805460ff191660ff841617905550620000b6336200009460055460ff1690565b620000a49060ff16600a620004bd565b620000b09085620004d2565b620000c0565b505050506200054c565b6001600160a01b0382166200011b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012f9190620004f4565b90915550506001600160a01b038216600090815260208190526040812080548392906200015e908490620004f4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b6906200050f565b90600052602060002090601f016020900481019282620001da576000855562000225565b82601f10620001f557805160ff191683800117855562000225565b8280016001018555821562000225579182015b828111156200022557825182559160200191906001019062000208565b506200023392915062000237565b5090565b5b8082111562000233576000815560010162000238565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027657600080fd5b81516001600160401b03808211156200029357620002936200024e565b604051601f8301601f19908116603f01168101908282118183101715620002be57620002be6200024e565b81604052838152602092508683858801011115620002db57600080fd5b600091505b83821015620002ff5785820183015181830184015290820190620002e0565b83821115620003115760008385830101525b9695505050505050565b600080600080608085870312156200033257600080fd5b84516001600160401b03808211156200034a57600080fd5b620003588883890162000264565b955060208701519150808211156200036f57600080fd5b506200037e8782880162000264565b93505060408501519150606085015160ff811681146200039d57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003ff578160001904821115620003e357620003e3620003a8565b80851615620003f157918102915b93841c9390800290620003c3565b509250929050565b6000826200041857506001620004b7565b816200042757506000620004b7565b81600181146200044057600281146200044b576200046b565b6001915050620004b7565b60ff8411156200045f576200045f620003a8565b50506001821b620004b7565b5060208310610133831016604e8410600b841016171562000490575081810a620004b7565b6200049c8383620003be565b8060001904821115620004b357620004b3620003a8565b0290505b92915050565b6000620004cb838362000407565b9392505050565b6000816000190483118215151615620004ef57620004ef620003a8565b500290565b600082198211156200050a576200050a620003a8565b500190565b600181811c908216806200052457607f821691505b602082108114156200054657634e487b7160e01b600052602260045260246000fd5b50919050565b610a21806200055c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461014757806395d89b41146101705780639dc29fac14610178578063a457c2d71461018d578063a9059cbb146101a0578063dd62ed3e146101b357600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101c6565b6040516100ce919061083f565b60405180910390f35b6100ea6100e53660046108b0565b610258565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a3660046108da565b610270565b60055460405160ff90911681526020016100ce565b6100ea6101423660046108b0565b610294565b6100fe610155366004610916565b6001600160a01b031660009081526020819052604090205490565b6100c16102b6565b61018b6101863660046108b0565b6102c5565b005b6100ea61019b3660046108b0565b6102d3565b6100ea6101ae3660046108b0565b610353565b6100fe6101c1366004610938565b610361565b6060600380546101d59061096b565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061096b565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b60003361026681858561038c565b5060019392505050565b60003361027e8582856104b1565b61028985858561052b565b506001949350505050565b6000336102668185856102a78383610361565b6102b191906109bc565b61038c565b6060600480546101d59061096b565b6102cf82826106f9565b5050565b600033816102e18286610361565b9050838110156103465760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610289828686840361038c565b60003361026681858561052b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ee5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161033d565b6001600160a01b03821661044f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161033d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006104bd8484610361565b9050600019811461052557818110156105185760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161033d565b610525848484840361038c565b50505050565b6001600160a01b03831661058f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161033d565b6001600160a01b0382166105f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161033d565b6001600160a01b038316600090815260208190526040902054818110156106695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161033d565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a09084906109bc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ec91815260200190565b60405180910390a3610525565b6001600160a01b0382166107595760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161033d565b6001600160a01b038216600090815260208190526040902054818110156107cd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161033d565b6001600160a01b03831660009081526020819052604081208383039055600280548492906107fc9084906109d4565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016104a4565b600060208083528351808285015260005b8181101561086c57858101830151858201604001528201610850565b8181111561087e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108ab57600080fd5b919050565b600080604083850312156108c357600080fd5b6108cc83610894565b946020939093013593505050565b6000806000606084860312156108ef57600080fd5b6108f884610894565b925061090660208501610894565b9150604084013590509250925092565b60006020828403121561092857600080fd5b61093182610894565b9392505050565b6000806040838503121561094b57600080fd5b61095483610894565b915061096260208401610894565b90509250929050565b600181811c9082168061097f57607f821691505b602082108114156109a057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156109cf576109cf6109a6565b500190565b6000828210156109e6576109e66109a6565b50039056fea264697066735822122062a9db596ad91733a2d77f7022376c49a82c07ead7f94b87dbae6d2478ee55f364736f6c63430008090033";

type EttiosTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EttiosTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EttiosToken__factory extends ContractFactory {
  constructor(...args: EttiosTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EttiosToken";
  }

  deploy(
    name: string,
    symbol: string,
    _initMint: BigNumberish,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EttiosToken> {
    return super.deploy(
      name,
      symbol,
      _initMint,
      _decimals,
      overrides || {}
    ) as Promise<EttiosToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    _initMint: BigNumberish,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _initMint,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): EttiosToken {
    return super.attach(address) as EttiosToken;
  }
  connect(signer: Signer): EttiosToken__factory {
    return super.connect(signer) as EttiosToken__factory;
  }
  static readonly contractName: "EttiosToken";
  public readonly contractName: "EttiosToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EttiosTokenInterface {
    return new utils.Interface(_abi) as EttiosTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EttiosToken {
    return new Contract(address, _abi, signerOrProvider) as EttiosToken;
  }
}
